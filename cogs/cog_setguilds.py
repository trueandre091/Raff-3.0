import disnake
from disnake.ext import commands
from disnake.ui import View, button, select, Button, Modal
from disnake.ui import Select
from disnake import SelectOption, ModalInteraction
import datetime
from DB.DataBase import GuildsDbase
from DB.JSONEnc import JsonEncoder


class GuildSetsHomeScreenView(View):
    def __init__(self):
        super().__init__(timeout=3600)

    @select(
        custom_id="home_screen",
        min_values=1,
        max_values=1,
        placeholder="–ß—Ç–æ —Ö–æ—á–µ—à—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å?",
        options=[
            SelectOption(
                label="–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ", description="–ù–∞—Å—Ç—Ä–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ", emoji="üôã‚Äç‚ôÇÔ∏è", value="greetings"
            ),
            SelectOption(label="–ü—Ä–æ—â–∞–Ω–∏–µ", description="–ù–∞—Å—Ç—Ä–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–æ—â–∞–Ω–∏–µ", emoji="üëã", value="farewell"),
            SelectOption(
                label="–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å",
                description="–ü–æ–ª—É—á–∏ –æ—Ç–∑—ã–≤—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —Å–≤–æ–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞",
                emoji="ü§ô",
                value="feedback",
            ),
            SelectOption(
                label="–û—á–∫–∏ –∏ –æ–ø—ã—Ç", description="–ü–æ–ø—Ä–æ–±—É–π –Ω–∞—à—É —Å–∏—Å—Ç–µ–º—É –æ—á–∫–æ–≤ –∏ –æ–ø—ã—Ç–∞", emoji="ü™ô", value="scores_exp"
            ),
            SelectOption(label="–ò–≥—Ä—ã", description="–ù–∞—Å—Ç—Ä–æ–π –∏–≥—Ä—ã –∫–∞–∫ –ø–æ–∂–µ–ª–∞–µ—à—å", emoji="üéÆ", value="games"),
        ],
    )
    async def select_set_callback(self, selectMenu: Select, interaction: disnake.Interaction):
        value = selectMenu.values
        if value == "greetings":
            self.clear_items()
            greet_view = GuildSetsGreetView()
            await interaction.edit_original_response(
                embed=disnake.Embed.from_dict(create_welcome_cfg()), view=greet_view
            )


class GuildSetsGreetView(GuildSetsHomeScreenView):
    @select(
        select_type=disnake.ComponentType.channel_select,
        channel_types=[disnake.ChannelType.text, disnake.ChannelType.news],
        placeholder="–í –∫–∞–∫–æ–º –∫–∞–Ω–∞–ª–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å?",
        min_values=0,
        options=[
            SelectOption(label="–ù–∏—á–µ–≥–æ", description="–û—Ç–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è", emoji="‚ùå", value="greetings_disable")
        ],
    )
    async def callback(self, selectMenu: Select, interaction: disnake.Interaction):
        pass

    @button(label="–ù–∞–∑–∞–¥")
    async def to_back_callback(self, button: Button, interaction: disnake.Interaction):
        home_screen = GuildSetsHomeScreenView()
        await interaction.edit_original_response(embed=disnake.Embed.from_dict(create_hello_embed()), view=home_screen)

    @button(label="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å")
    async def open_greet_set_callback(self, button: Button, interaction: disnake.Interaction):
        await interaction.response.send_mpdal(GreetModal())


class GreetModal(Modal):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs, title="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π")

        self.add_text_input(
            label="–ó–∞–≥–æ–ª–æ–≤–æ–∫",
            placeholder="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä!  üíå",
            min_length=4,
            max_length=75,
            required=True,
            custom_id="title",
        )
        self.add_text_input(
            label="–°–æ–æ–±—â–µ–Ω–∏–µ",
            placeholder="{member.mention}, —Ä–∞–¥—ã —Ç–µ–±—è –≤–∏–¥–µ—Ç—å!"
            "–ü—Ä–∏—Ö–æ–¥–∏ –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –µ—Å–ª–∏ –±—É–¥–µ—Ç –≤—Ä–µ–º—è <#1160687361269694505> üåº",
            style=disnake.TextInputStyle.paragraph,
            max_length=256,
            required=False,
            custom_id="description",
        )
        self.add_text_input(
            label="–ê–≤–∞—Ç–∞—Ä–∫–∞ (–¥–µ—Ñ–æ–ª—Ç–Ω–∞—è)",
            placeholder="–í—Å—Ç–∞–≤—å —Å—Å—ã–ª–∫—É –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞",
            required=False,
            custom_id="url_to_ava",
        )
        self.add_text_input(
            label="–¢–≤–æ—è –∫–∞—Ä—Ç–∏–Ω–∫–∞",
            placeholder="–í—Å—Ç–∞–≤—å —Å—Å—ã–ª–∫—É –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞",
            required=False,
            custom_id="background_image",
        )

    async def callback(self, interaction: ModalInteraction):
        title = interaction.text_values["title"]
        description = interaction.text_values["description"]
        url_to_ava = interaction.text_values["url_to_ava"]
        background_image = interaction.text_values["background_image"]

        gdb = GuildsDbase()
        enc = JsonEncoder()

        guild = await gdb.get_guild({"guild_id": interaction.guild.id})
        if guild:
            settings = enc.code_from_json(guild.guild_sets)
            settings["WELCOME_SETTINGS"]["EMBED"]["TITLE"] = title
            settings["WELCOME_SETTINGS"]["EMBED"]["DESCRIPTION"] = description
            settings["WELCOME_SETTINGS"]["AVATAR_IF_ERROR"] = url_to_ava
            settings["WELCOME_SETTINGS"]["BACKGROUND_IMAGE"] = background_image

            await gdb.update_guild({"guild_id": guild.guild_id, "guild_sets": settings})


class GuildSetsFarewellView(GuildSetsHomeScreenView):
    pass


def create_hello_embed():
    embed = {
        "title": "–ü—Ä–∏–≤–µ—Ç",
        "description": "",
        "color": 0x2B2D31,
        "timestamp": datetime.datetime.now().isoformat(),
        "author": None,
        "fields": [
            {
                "value": "–ü—Ä–µ–∂–¥–µ —á–µ–º –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–∏–º –±–æ—Ç–æ–º –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–µ—Å—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –µ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å. "
                "–ö–æ–Ω–µ—á–Ω–æ, —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç —à–∞–≥ –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ø–æ–∑–∂–µ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞–≤ '/–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞'\n"
                "(–Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –±–æ—Ç–∞ –º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —Å–µ—Ä–≤–µ—Ä–∞)"
                "–ü–æ–µ—Ö–∞–ª–∏!",
            },
        ],
    }
    return embed


def create_welcome_cfg():
    embed = {
        "title": "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ",
        "description": "–¢—ã –º–æ–∂–µ—à—å –ø–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–≤–æ–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞!",
        "color": 0x2B2D31,
        "timestamp": datetime.datetime.now().isoformat(),
        "author": None,
        "fields": [
            {
                "name": "–ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
                "value": "–ß—Ç–æ–±—ã –±–æ—Ç –Ω–∞—á–∞–ª –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –∫–∞–Ω–∞–ª",
            },
            {
                "name": "–ö–∞—Å—Ç–æ–º–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ",
                "value": "–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å', –≤–≤–µ–¥–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫, —Ç–µ–∫—Å—Ç —Å–≤–æ–µ–≥–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏ –∏—Å–ø–æ–ª—å–∑—É–π! \n"
                "–¢—ã —Ç–∞–∫ –∂–µ –º–æ–∂–µ—à—å —É–ø–æ–º—è–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π —Ç–æ–ª—å–∫–æ —á—Ç–æ –∑–∞—à—ë–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä. –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏ {member.mention} –∏–ª–∏ {member} –Ω–∞ —Ç–æ –º–µ—Å—Ç–æ, –≥–¥–µ –µ–≥–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è —É–ø–æ–º—è–Ω—É—Ç—å. \n",
            },
            {
                "name": "–ö–∞—Å—Ç–æ–º–Ω—ã–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏",
                "value": "–ò–Ω–æ–≥–¥–∞ –∞–≤–∞—Ç–∞—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–æ–∂–µ—Ç –Ω–µ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å. –î–ª—è —Ç–∞–∫–∏—Ö —Å–ª—É—á–∞–µ —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –∞–≤–∞—Ç–∞—Ä, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –≤–º–µ—Å—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ. –ü—Ä–æ—Å—Ç–æ –≤—Å—Ç–∞–≤—å —Å—Å—ã–ª–∫—É –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É! \n"
                "–•–æ—á–µ—à—å —á—Ç–æ–±—ã —Ç–≤–æ—ë –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –±—ã–ª–æ –æ—Å–æ–±–µ–Ω–Ω—ã–º? –¢–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π —Å–≤–æ–π —Ñ–æ–Ω –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π!",
            },
        ],
    }
    return embed


def create_farewell_cfg():
    embed = {
        "title": "–ü—Ä–æ—â–∞–Ω–∏–µ",
        "description": "–ù–µ –∑–∞–±—É–¥—å –ø–æ–ø—Ä–æ—â–∞—Ç—å—Å—è —Å —Ç–µ–º–∏, –∫—Ç–æ —É—à—ë–ª!",
        "color": 0x2B2D31,
        "timestamp": datetime.datetime.now().isoformat(),
        "author": None,
        "fields": [
            {"name": "–ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", "value": "–ù–µ –∑–∞–±—É–¥—å –≤—ã–±—Ä–∞—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –ø—Ä–æ—â–∞–Ω–∏–π"},
            {
                "name": "–ö–∞—Å—Ç–æ–º–Ω–æ–µ –ø—Ä–æ—â–∞–Ω–∏–µ",
                "value": "–¢—ã –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –∫–∞–∫ –∏ –≤ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è—Ö. –ù–∞ –≤—ã–±–æ—Ä: {member.mention}, {member.nick}, {member.name}, {member}.\n"
                "–¢—ã —Ç–æ—á–Ω–æ —Å–º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ —á—Ç–æ-—Ç–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ",
            },
        ],
    }


class GuildsManage(commands.Cog):
    """
    This class will manage bot (client) guilds, configure them
    """

    def __init__(self, bot: commands.Bot) -> None:
        self.bot = bot

    @commands.slash_command(name="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞", description="–ü–æ–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞")
    @commands.has_permissions(administrator=True)
    async def set_guild_settings(self, interaction: disnake.Interaction):
        db = GuildsDbase()
        data = {
            "guild_id": interaction.guild.id,
            "guild_name": interaction.guild.name,
            "count_members": interaction.guild.member_count,
        }
        guild_sets = await db.add_guild(data)
        if guild_sets:
            embed_dict = create_hello_embed()
            view = GuildSetsHomeScreenView()
            await interaction.response.send_message(embed=disnake.Embed.from_dict(embed_dict), view=view)


def setup(bot: commands.Bot):
    bot.add_cog(GuildsManage(bot))
