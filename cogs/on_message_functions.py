import disnake
from cogs import counter_functions


async def reactions_thread_check(message: disnake.Message, settings_dict) -> None:

    if str(message.channel.id) in settings_dict["CHANNELS"]:
    
        channels = settings_dict["CHANNELS"]
        channels_thread = settings_dict["THREAD"]
        reactions = settings_dict["REACTIONS"]
        matched_channels_to_reactions = settings_dict["MATCHED_REACTIONS_TO_CHANNELS"]

        message_channel_name = channels[str(message.channel.id)]
        print(message_channel_name)

        if message_channel_name in channels_thread:

            await message.create_thread(name="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏")
        
        for channel in matched_channels_to_reactions:
            
            if message_channel_name == channel:
                for reaction in matched_channels_to_reactions[channel]:

                    await message.add_reaction(reactions[reaction])


async def boosts_check(message: disnake.Message, settings_dict) -> None:

    if message.author.id in settings_dict["BOOST_BOTS"].values():

        if message.author.id == settings_dict["BOOST_BOTS"]["SD.C Monitoring"]:

            flag = True
            skip_first_flag = False 
            async for msg in message.channel.history(limit=50):
                if skip_first_flag:
                    if msg.type == disnake.MessageType.application_command and msg.interaction.name == "up":
                        flag = False
                    if msg.author.id == settings_dict["REMINDER"] and "/up" in msg.content:
                        break
                skip_first_flag = False

            if flag:
                print(0)

                counter_functions.count_users_boosts(message.interaction.user.id)

        if message.author.id == settings_dict["BOOST_BOTS"]["DSMonitoring"]:
            if "–í—ã —É—Å–ø–µ—à–Ω–æ –ª–∞–π–∫–Ω—É–ª–∏ —Å–µ—Ä–≤–µ—Ä." in message.embeds[-1].to_dict()["description"]:

                counter_functions.count_users_boosts(message.interaction.user.id)


if '/–∑–∞–∫–∞–∑' in message.content:

        channel = bot.get_channel(cfg.CHANNELS_SETTINGS["CHANNEL_RPBAR"])
        barmen_role = "<@&829082636705595433>"

        if message.channel.id != cfg.CHANNELS_SETTINGS["CHANNEL_RPBAR"]:

            await message.reply(
                f"–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–µ {channel.mention}!",
                delete_after=5
            )

        else:

            count_orders_counter()

            embed = disnake.Embed(
                title="–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ üì•",
                description=f"{message.author.mention}\n{message.content.strip('/–∑–∞–∫–∞–∑ ')}",
                color=0x2b2d31,
                timestamp=datetime.now()
            )
            embed.set_footer(text="–¢–æ–∂–µ —Ö–æ—á–µ—à—å –∑–∞–∫–∞–∑–∞—Ç—å —á—Ç–æ-–Ω–∏–±—É–¥—å? –ü—Ä–æ–ø–∏—à–∏ /–∑–∞–∫–∞–∑ —á–µ—Ä–µ–∑ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞!")

            await message.reply(
                f"–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫ {message.author.mention}! –ë–∞—Ä–º–µ–Ω —Å–∫–æ—Ä–æ –ø–æ–¥–æ–π–¥—ë—Ç üê•",
                delete_after=20.0
            )
            await channel.send(barmen_role, embed=embed)
