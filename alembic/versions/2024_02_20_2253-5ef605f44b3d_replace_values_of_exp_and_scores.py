"""Replace values of exp and scores

Revision ID: 5ef605f44b3d
Revises: 0f23c9ee8863
Create Date: 2024-02-20 22:53:10.887764

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5ef605f44b3d'
down_revision: Union[str, None] = '0f23c9ee8863'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("guild_user") as batch_op:
        batch_op.alter_column('experience',
                   existing_type=sa.INTEGER(),
                   nullable=False)
        batch_op.alter_column('scores',
                   existing_type=sa.INTEGER(),
                   nullable=False)
        batch_op.alter_column('updated_at',
                   existing_type=sa.DATETIME(),
                   nullable=False)
    op.drop_column('users', 'scores')
    op.drop_column('users', 'experience')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('experience', sa.INTEGER(), nullable=False))
    op.add_column('users', sa.Column('scores', sa.INTEGER(), nullable=False))
    with op.batch_alter_table('guild_user') as batch_op:
        batch_op.alter_column('updated_at',
                   existing_type=sa.DATETIME(),
                   nullable=True)
        batch_op.alter_column('scores',
                   existing_type=sa.INTEGER(),
                   nullable=True)
        batch_op.alter_column('experience',
                   existing_type=sa.INTEGER(),
                   nullable=True)
    # ### end Alembic commands ###
